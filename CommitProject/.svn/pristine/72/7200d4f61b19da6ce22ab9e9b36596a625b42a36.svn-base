package kr.or.ddit.commit.service;

import java.util.List;

import kr.or.ddit.commit.dao.INoticeDao;
import kr.or.ddit.commit.dao.NoticeDaoImpl;
import kr.or.ddit.commit.vo.NoticeVO;

public class NoticeServiceImpl implements INoticeService {
	
	private INoticeDao dao;
	private static NoticeServiceImpl service;
	
	private NoticeServiceImpl() {
		dao = NoticeDaoImpl.getInstance();
	}
	
	public static NoticeServiceImpl getInstance() {
		if(service == null) service = new NoticeServiceImpl(); 
		
		return service;
	}

	@Override
	public int insertNotice(NoticeVO nvo) {
		int inum = 0;
		
		try {
			inum = dao.insertNotice(nvo);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return inum;
	}

	@Override
	public int updateNotice(NoticeVO nvo) {
		int unum = 0;
		
		try {
			unum = dao.updateNotice(nvo);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return unum;
	}

	@Override
	public int deleteNotice(int noticeNo) {
		int dnum = 0;
		
		try {
			dnum = dao.deleteNotice(noticeNo);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return dnum;
	}

	@Override
	public int updateView(int noticeNo) {
		int uvnum = 0;
		
		try {
			uvnum = dao.updateView(noticeNo);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return uvnum;
	}

	@Override
	public List<NoticeVO> getAllNotice() {
		List<NoticeVO> allList = null;
		
		try {
			allList = dao.getAllNotice();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return allList;
	}

	@Override
	public List<NoticeVO> selectNotice(int noticeNo) {
		List<NoticeVO> selList = null;
		
		try {
			selList = dao.selectNotice(noticeNo);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return selList;
	}

}
