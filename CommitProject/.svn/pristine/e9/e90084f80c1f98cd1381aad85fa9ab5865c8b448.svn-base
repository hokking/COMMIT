package kr.or.ddit.commit.service;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import kr.or.ddit.commit.dao.FreedomDaoImpl;
import kr.or.ddit.commit.dao.IFreedomDao;
import kr.or.ddit.commit.vo.FreedomVO;

public class FreedomServiceImpl implements IFreedomService {

	private IFreedomDao dao;
	private static IFreedomService service; // 선언만
	
	private FreedomServiceImpl() { // 생성자 : private여서 외부에서 사용불가인데
		dao = FreedomDaoImpl.getDao();
	}
	
	public static IFreedomService getService() {
		// IFreedomServcie : 타입 (type)
		// getService : 메서드 이름 ( service를 가져온다), class 밖에서 service를 가져오도록 하는 메서드
		//생성자 : 여기서 외부에서 사용할 수 있도록 작업 ( public static : 고정해서 공유한다)
		if(service ==null) service = new FreedomServiceImpl(); 
		// 생성자를 만들면서 FreedomService 클래스의 내용을 밖에서 사용할 수 있게 한다.
		
		return service; // 타입으로 반환
		
	}
	
	@Override
	public List<FreedomVO> selectAllFreeBoard() {
		List<FreedomVO> list = null;
		
		try {
			list = dao.selectAllFreeBoard();			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}

	@Override
	public void insertFreeboard(FreedomVO vo) {
		
		try {
			dao.insertFreeboard(vo);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}

	@Override
	public FreedomVO selectOneFreeBoard(int freedomnum){
		FreedomVO vo = null;
		
		try {
			vo = dao.selectOneFreeBoard(freedomnum);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return vo;
	}

	@Override
	public List<FreedomVO> searchTitleFreeBoard(String title) {
		List<FreedomVO> list = null;
		try {
			list = dao.searchTitleFreeBoard(title);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return list;
	}

	@Override
	public List<FreedomVO> searchMemIdFreeBoard(String memId) {
		List<FreedomVO> list = null;
		try {
			list = dao.searchMemIdFreeBoard(memId);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return list;
	}

	@Override
	public int updateFreeBoard(FreedomVO vo) {
		int num = 0;
		
		try {
			num = dao.updateFreeBoard(vo);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return num;
	}

	@Override
	public int deleteFreeboard(int freedomnum) {
		int num = 0;
		
		try {
			num = dao.deleteFreeBoard(freedomnum);
		} catch (SQLException e) {	
			e.printStackTrace();
		}
		
		return num;
	}



}
